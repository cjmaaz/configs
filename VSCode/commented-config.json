{
  //=====================================================================
  //? EDITOR EXPERIENCE & APPEARANCE
  // This section controls how VS Code looks and behaves overall
  //=====================================================================

  //------------------WORKBENCH & WINDOW LAYOUT--------------------------
  // These settings control the overall workspace appearance and organization

  "workbench.iconTheme": "material-icon-theme", // Sets file and folder icons to Material Design style
  "workbench.productIconTheme": "fluent-icons", // Sets interface icons to Microsoft's Fluent design style
  "workbench.colorTheme": "Noctis Bordo", // Sets the color theme to Noctis Bordo (dark theme with burgundy accents)
  "workbench.sideBar.location": "right", // Positions the sidebar (explorer, extensions, etc.) on the right side
  "workbench.editor.empty.hint": "hidden", // Hides the "Get Started" page when opening VS Code
  "workbench.editor.decorations.badges": true, // Shows badges on file tabs (like git status)
  "workbench.editor.decorations.colors": true, // Shows color indicators on file tabs
  "workbench.startupEditor": "newUntitledFile", // Opens a new untitled file when VS Code starts
  "workbench.editor.splitInGroupLayout": "vertical", // When splitting editors, stack them vertically
  "workbench.enableExperiments": false, // Controls visibility of the activity bar (with icons for views)
  "workbench.list.smoothScrolling": true, // Enables smooth scrolling in lists like explorer
  "workbench.tree.indent": 16, // Sets the indentation size for tree views (explorer)
  "workbench.tree.renderIndentGuides": "always", // Always shows indent guides in tree views
  "workbench.editor.enablePreview": false, // Opens files permanently rather than in preview mode
  "workbench.editor.pinnedTabsOnSeparateRow": true, // Displays pinned tabs on a separate row
  "workbench.editor.wrapTabs": true, // Wraps tabs to multiple rows when there are many tabs
  "workbench.editor.tabSizing": "shrink", // Shrinks tabs when there are many open
  "workbench.editor.showTabs": "multiple", // Only show tab bar when multiple files are open
  "workbench.panel.defaultLocation": "bottom", // Places panels (terminal, output) at the bottom
  "workbench.layoutControl.enabled": true, // Shows layout controls in the top-right corner

  // Performance
  "workbench.reduceMotion": "auto", // Reduces motion based on OS settings
  "workbench.commandPalette.history": 50, // Remembers 50 most recent commands
  "workbench.colorTheme.preferredDarkColorTheme": "Noctis Bordo", // Sets preferred dark theme
  "workbench.editor.untitled.hint": "hidden", // Hides untitled file hints
  "workbench.editor.closeOnFileDelete": false, // Doesn't close editors when files are deleted

  // Window appearance and behavior
  "window.commandCenter": true, // Enables the command center at the top of the window
  "window.zoomLevel": 0, // Sets the default zoom level (0 = 100%)
  // Window title format - uncomment preferred format
  // "window.title": "${rootName}🗃️${separator}${dirty}${activeEditorShort}👈🏻 ${activeFolderShort}📂 JS/TS💛",
  // "window.title": "${rootName}🗃️${separator}${dirty}${activeEditorShort}👈🏻 ${activeFolderShort}📂 WORK🧑🏻‍💻",
  "window.title": "${rootName}🗃️${separator}${dirty}${activeEditorShort}👈🏻 ${activeFolderShort}📂 SF ☁️",
  // "window.title": "${rootName}🗃️${separator}${dirty}${activeEditorShort}👈🏻 ${activeFolderShort}📂 PERSONAL🧑🏻‍💻",
  // "window.title": "${rootName}🗃️${separator}${dirty}${activeEditorShort}👈🏻 ${activeFolderShort}📂 DEFAULT🏠",
  // "window.title": "${rootName}🗃️${separator}${dirty}${activeEditorShort}👈🏻 ${activeFolderShort}📂 Dart💙",
  // "window.title": "${rootName}🗃️${separator}${dirty}${activeEditorShort}👈🏻 ${activeFolderShort}📂 React⚛️",
  // "window.title": "${rootName}🗃️${separator}${dirty}${activeEditorShort}👈🏻 ${activeFolderShort}📂 MERN🪩",
  // "window.title": "${rootName}🗃️${separator}${dirty}${activeEditorShort}👈🏻 ${activeFolderShort}📂 PHP🐘",
  // "window.title": "${rootName}🗃️${separator}${dirty}${activeEditorShort}👈🏻 ${activeFolderShort}📂 Vue💚",
  // "window.title": "${rootName}🗃️${separator}${dirty}${activeEditorShort}👈🏻 ${activeFolderShort}📂 C#/.NET🪟",

  // Color customizations for themes and bracket highlighting
  "workbench.colorCustomizations": {
    "editorCursor.foreground": "#ffe657", // Sets cursor color to bright yellow
    "terminalCursor.foreground": "#ff0a54", // Sets terminal cursor color to pink
    "editorIndentGuide.activeBackground1": "#ff0000", // Sets active indent guide to red
    "editorIndentGuide.background1": "#555", // Sets inactive indent guides to gray
    "[Material Theme Darker]": {
      // Theme-specific color overrides for Material Theme Darker
      "activityBarBadge.background": "#2979FF", // Sets activity bar badge background to blue
      "activityBar.activeBorder": "#2979FF", // Sets active item border in activity bar to blue
      "list.activeSelectionForeground": "#2979FF", // Sets selected item text in lists to blue
      "list.inactiveSelectionForeground": "#2979FF", // Sets inactive selected item text in lists to blue
      "list.highlightForeground": "#2979FF", // Sets highlighted text in lists to blue
      "scrollbarSlider.activeBackground": "#2979FF50", // Sets scrollbar active state to semi-transparent blue
      "editorSuggestWidget.highlightForeground": "#2979FF", // Sets highlighted text in suggestion widget to blue
      "textLink.foreground": "#2979FF", // Sets text links to blue
      "progressBar.background": "#2979FF", // Sets progress bar to blue
      "pickerGroup.foreground": "#2979FF", // Sets picker group labels to blue
      "tab.activeBorder": "#2979FF", // Sets active tab border to blue
      "notificationLink.foreground": "#2979FF", // Sets notification links to blue
      "editorWidget.resizeBorder": "#2979FF", // Sets editor widget resize border to blue
      "editorWidget.border": "#2979FF", // Sets editor widget border to blue
      "settings.modifiedItemIndicator": "#2979FF", // Sets modified setting indicator to blue
      "settings.headerForeground": "#2979FF", // Sets settings header text to blue
      "panelTitle.activeBorder": "#2979FF", // Sets active panel title border to blue
      "breadcrumb.activeSelectionForeground": "#2979FF", // Sets active breadcrumb item to blue
      "menu.selectionForeground": "#2979FF", // Sets selected menu item text to blue
      "menubar.selectionForeground": "#2979FF", // Sets selected menubar item text to blue
      "editor.findMatchBorder": "#2979FF", // Sets find match border to blue
      "selection.background": "#2979FF40", // Sets selection background to semi-transparent blue
      "statusBarItem.remoteBackground": "#2979FF" // Sets remote indicator background to blue
    },
    // Bracket pair colorization - assigns different colors to nested brackets for clarity
    "editorBracketHighlight.foreground1": "#1290f7", // First level brackets: blue
    "editorBracketHighlight.foreground2": "#fdaa1a", // Second level brackets: orange
    "editorBracketHighlight.foreground3": "#cb26fd", // Third level brackets: purple
    "editorBracketHighlight.foreground4": "#0de4fc", // Fourth level brackets: cyan
    "editorBracketHighlight.foreground5": "#92ff24", // Fifth level brackets: green
    "editorBracketHighlight.foreground6": "#f3f719", // Sixth level brackets: yellow
    "editorBracketHighlight.unexpectedBracket.foreground": "#fc232a", // Mismatched brackets: red
    "editorRuler.foreground": "#ffffff" // Column ruler color: white
  },

  //------------------GENERAL EDITOR BEHAVIOR & VISUALS------------------
  // These settings control how the code editor looks and behaves

  // Font settings
  "editor.fontSize": 20, // Sets the font size to 20pt
  "editor.fontLigatures": true, // Enables font ligatures for coding fonts that support them
  "editor.fontWeight": "400", // Sets font weight to normal (400)
  "editor.fontFamily": "'CaskaydiaCove Nerd Font','Hack Nerd Font','Cascadia Code','Fira Code',Consolas", // Font priority list
  "editor.codeLensFontFamily": "'Cascadia Code','Fira Code',Consolas", // Font for code lens UI elements

  // Editor appearance and behavior
  "editor.tabSize": 2, // Sets tab size to 2 spaces
  "editor.stickyScroll.enabled": false, // Disables sticky scroll (keeps code headers visible)
  "editor.stickyScroll.maxLineCount": 5, // Limits sticky scroll to 5 lines max (when enabled)
  "editor.hover.sticky": true, // Keeps hover popups open when mouse moves over them
  "editor.multiCursorModifier": "ctrlCmd", // Uses Ctrl/Cmd for multi-cursor operations
  "editor.suggestSelection": "first", // Automatically selects first suggestion
  "editor.inlineSuggest.enabled": true, // Enables inline suggestions (like GitHub Copilot)
  "editor.inlineSuggest.suppressSuggestions": true, // Hides regular suggestions if inline ones are shown
  "editor.parameterHints.enabled": true, // Shows parameter hints for functions
  "editor.hover.delay": 700, // Sets hover tooltip delay to 700ms
  "editor.selectionHighlight": true, // Highlights all occurrences of selected text
  "editor.autoClosingBrackets": "always", // Automatically closes brackets and parentheses
  "editor.autoIndent": "brackets", // Automatically indents based on bracket structure
  "editor.cursorStyle": "line", // Uses a line cursor style
  "editor.dragAndDrop": false, // Disables drag and drop of selected text
  "editor.codeLens": true, // Enables code lens (contextual actions)
  "editor.renderLineHighlight": "all", // Highlights current line in editor
  "editor.roundedSelection": true, // Uses rounded corners for text selections
  "editor.mouseWheelZoom": false, // Disables zooming with Ctrl+MouseWheel
  "editor.formatOnSave": true, // Automatically formats code when saving
  "editor.formatOnPaste": true, // Automatically formats code when pasting
  "editor.wordWrap": "off", // Disables word wrapping
  "editor.lineDecorationsWidth": 0, // Removes space for line decorations
  "editor.glyphMargin": false, // Hides the glyph margin (used by debugger)
  "editor.linkedEditing": true, // Enables linked editing (changes both tags when editing one)
  "editor.largeFileOptimizations": false, // Disables optimizations for large files
  "editor.accessibilitySupport": "off", // Disables accessibility support

  "editor.occurrencesHighlight": "singleFile", // Highlights occurrences only in current file
  "editor.foldingImportsByDefault": true, // Folds imports by default

  // Cursor appearance
  "editor.cursorBlinking": "expand", // Uses expanding animation for cursor blinking
  "editor.cursorWidth": 3, // Sets cursor width to 3px
  "editor.cursorSmoothCaretAnimation": "on", // Enables smooth cursor animation
  "editor.smoothScrolling": false, // Disables smooth scrolling

  // Minimap settings
  "editor.minimap.showSlider": "always", // Always shows the slider in the minimap
  "editor.minimap.enabled": false, // Disables the code minimap

  // Token colorization for code styling (italic/bold for specific syntax)
  "editor.tokenColorCustomizations": {
    "textMateRules": [
      {
        "scope": [
          // These syntax elements will be rendered in italic
          "comment", // Comments
          "keyword", // Keywords like if, for, while
          "storage.modifier", // Modifiers like public, private
          "storage.type.class.js", // Class declarations in JS
          "storage.type.js", // Type declarations in JS
          "storage.type.function.js", // Function declarations in JS
          "entity.other.attribute-name.html", // HTML attributes
          "string.quoted.single.js", // Single-quoted strings in JS
          "string.quoted.double.js", // Double-quoted strings in JS
          "string.template.js", // Template literals in JS
          "string.quoted.single.apex", // Single-quoted strings in Apex
          "string.quoted.double.apex" // Double-quoted strings in Apex
        ],
        "settings": {
          "fontStyle": "italic" // Makes the above elements italic
        }
      },
      {
        "scope": [
          // These syntax elements will be rendered in bold
          "keyword.control.conditional", // Conditional keywords (if, else, switch)
          "keyword.operator", // Operators (+, -, *, /)
          "storage.type.function.arrow.js" // Arrow functions in JS
        ],
        "settings": {
          "fontStyle": "bold" // Makes the above elements bold
        }
      },
      {
        "scope": ["support.function.js"], // JavaScript built-in functions
        "settings": {
          "fontStyle": "" // Uses normal font style (no bold/italic)
        }
      },
      {
        "scope": "keyword.other.dotenv", // .env file keywords
        "settings": {
          "foreground": "#FF000000" // Makes .env keywords transparent
        }
      }
    ]
  },

  // Bracket pair guides & colorization
  "editor.bracketPairColorization.enabled": true, // Enables colorization of matching brackets
  "editor.guides.bracketPairs": true, // Shows guides connecting bracket pairs
  "editor.guides.indentation": true, // Shows indentation guides
  "editor.guides.bracketPairsHorizontal": "active", // Shows horizontal guides for active bracket pair
  "editor.guides.highlightActiveBracketPair": true, // Highlights the active bracket pair
  // "editor.rulers": [80, 120], // Uncomment to enable ruler lines at 80 and 120 characters

  // Additional editor settings
  "editor.acceptSuggestionOnEnter": "on", // Accepts suggestions with Enter key
  "editor.find.autoFindInSelection": "multiline", // Auto-enables "Find in selection" when text is selected
  "editor.wordWrapColumn": 120, // Sets the column where words wrap (when word wrap is enabled)
  "editor.snippetSuggestions": "top", // Shows snippets at the top of suggestion list
  "editor.fastScrollSensitivity": 5, // Adjusts how fast the editor scrolls when using Alt+Wheel
  "editor.unicodeHighlight.invisibleCharacters": true, // Highlights invisible Unicode characters
  "editor.unicodeHighlight.ambiguousCharacters": true, // Highlights ambiguous Unicode characters
  "editor.scrollBeyondLastLine": false, // Prevents scrolling beyond the last line
  "editor.suggest.preview": true, // Shows preview of suggestions as you navigate
  "editor.suggest.showStatusBar": true, // Shows more suggestion details in status bar
  "editor.suggest.insertMode": "replace", // Replace text when inserting suggestions
  "editor.semanticHighlighting.enabled": true, // Enables semantic token-based highlighting
  "editor.rename.enablePreview": false, // Disables preview when renaming symbols
  "editor.bracketPairColorization.independentColorPoolPerBracketType": true, // Uses different color pools for different bracket types
  "editor.codeActionsOnSave": {
    "source.fixAll.eslint": "explicit", // Fix all auto-fixable issues with eslint on save when explicitly requested
    "source.fixAll": "explicit", // Fix all auto-fixable issues on save when explicitly requested
    "source.organizeImports": "explicit" // Organize imports on save when explicitly requested
  },
  "editor.accessibilityPageSize": 10, // Sets how many lines to scroll with screen reader navigation
  "editor.experimental.pasteActions.enabled": true, // Enables smart paste actions (format on paste, etc.)

  // Indent Rainbow extension settings
  "indentRainbow.indicatorStyle": "light", // Sets indent rainbow style to light
  "indentRainbow.lightIndicatorStyleLineWidth": 25, // Sets indent rainbow line width to 25px

  // Custom CSS and Loader Plugin
  "vscode_custom_css.imports": [
    "file:///C:\\Users\\Maaz\\AppData\\Roaming\\VSCodeCustomCSS\\style.css", // Windows Style Directory
    "file:///C:\\Users\\Maaz\\AppData\\Roaming\\VSCodeCustomCSS\\script.js" // Windows Style Directory
    // "file:///Users/maaz.rahman/VSCodeCustom/custom—vscode.css", // Mac Style Directory
    // "file:///Users/maaz.rahman/VSCodeCustom/custom-vscode-script.js" // Mac Style Directory
  ],

  //------------------NOTIFICATIONS & POPUPS--------------------------
  // Notification settings

  "window.dialogStyle": "custom", // Uses VS Code's custom dialog style
  "notifications.excludeList": ["workbench.action.terminal.allowWorkspaceShell"], // Excludes these notifications
  "window.restoreWindows": "all", // Restores all windows when VS Code restarts
  "window.confirmBeforeClose": "always", // Always confirms before closing VS Code

  //------------------USER INTERFACE & EXPERIENCE---------------------
  // UI settings

  "breadcrumbs.enabled": true, // Shows breadcrumbs navigation
  "breadcrumbs.filePath": "on", // Shows file path in breadcrumbs
  "breadcrumbs.symbolPath": "on", // Shows symbol path in breadcrumbs
  "explorer.confirmDragAndDrop": true, // Doesn't confirm drag and drop in explorer
  "explorer.confirmDelete": true, // Confirms file deletion in explorer
  "explorer.sortOrder": "foldersNestsFiles", // Sorts files and folders in explorer (directories first, then files)
  "explorer.fileNesting.enabled": false, // Enables file nesting in explorer
  "explorer.fileNesting.patterns": {
    "*.ts": "${capture}.js,${capture}.js.map,${capture}.d.ts",
    "*.js": "${capture}.js.map,${capture}.min.js,${capture}.d.ts",
    "*.jsx": "${capture}.js",
    "*.tsx": "${capture}.ts",
    "tsconfig.json": "tsconfig.*.json",
    "package.json": "package-lock.json,yarn.lock,pnpm-lock.yaml"
  }, // Defines file nesting patterns

  //------------------EXTENSIONS & MARKETPLACE-----------------------
  // Extension settings

  "extensions.autoUpdate": true, // Auto-updates extensions
  "extensions.autoCheckUpdates": true, // Checks for extension updates
  "extensions.closeExtensionDetailsOnViewChange": true, // Closes extension details when changing views

  //------------------TERMINAL APPEARANCE---------------------------------
  // These settings control how the integrated terminal looks and behaves

  // Terminal profile configuration for Windows
  "terminal.integrated.defaultProfile.windows": "PowerShell", // Sets default terminal to PowerShell on Windows
  "terminal.integrated.profiles.windows": {
    "PowerShell": {
      // PowerShell terminal configuration
      "source": "PowerShell", // Uses PowerShell as source
      "color": "terminal.ansiWhite", // Sets color to white
      "icon": "terminal-powershell" // Uses PowerShell icon
    }
  },
  /* Alternate terminal configuration (Git Bash)
  "terminal.integrated.profiles.windows": {
    "C:\\Program Files\\Git\\bin\\bash.exe (migrated)": {
      "path": "C:\\Program Files\\Git\\bin\\bash.exe",
      "args": []
    }
  },
  "terminal.integrated.defaultProfile.windows": "C:\\Program Files\\Git\\bin\\bash.exe (migrated)", */

  "terminal.integrated.fontFamily": "Cascadia Code NF", // Terminal font (works for macOS too)
  "terminal.integrated.smoothScrolling": true, // Enables smooth scrolling in terminal
  "terminal.integrated.cursorBlinking": true, // Enables cursor blinking in terminal
  "terminal.integrated.cursorStyle": "line", // Uses line cursor style in terminal

  // Additional terminal settings
  "terminal.integrated.gpuAcceleration": "auto", // Uses GPU acceleration for terminal rendering when available
  "terminal.integrated.copyOnSelection": true, // Automatically copies selected text in terminal
  "terminal.integrated.rightClickBehavior": "copyPaste", // Right-click copies/pastes in terminal
  "terminal.integrated.scrollback": 10000, // Increases scrollback buffer to 10,000 lines
  "terminal.integrated.persistentSessionReviveProcess": "onExitAndWindowClose", // Keeps terminal sessions alive
  "terminal.integrated.tabs.showActiveTerminal": "always", // Always shows the active terminal in tabs
  "terminal.integrated.confirmOnExit": "hasChildProcesses", // Confirms exit only when processes are running
  "terminal.integrated.shellIntegration.enabled": true, // Enables shell integration features

  //------------------EMMET & INTELLISENSE-------------------------------
  // These settings control code completion and suggestions

  "emmet.showSuggestionsAsSnippets": true, // Shows Emmet suggestions as snippets
  "emmet.includeLanguages": {
    "cmp": "html" // Treats .cmp files (Salesforce Lightning components) as HTML
  },
  "emmet.triggerExpansionOnTab": true, // Allows Tab key to trigger Emmet expansions
  "vsintellicode.modify.editor.suggestSelection": "enabled", // Enables AI-powered suggestions
  // "vsintellicode.modify.editor.suggestSelection": "automaticallyOverrodeDefaultValue",

  // Additional IntelliSense settings
  "editor.quickSuggestions": {
    "strings": true, // Enables suggestions within strings
    "comments": "off", // Disables suggestions in comments
    "other": true // Enables suggestions in other locations
  },
  "editor.suggestOnTriggerCharacters": true, // Shows suggestions when typing trigger characters
  "editor.tabCompletion": "on", // Enables tab completion
  "editor.wordBasedSuggestions": "matchingDocuments", // Shows word-based suggestions from matching documents

  //=====================================================================
  //? LANGUAGE & FILE SETTINGS
  // This section controls language-specific behaviors and file handling
  //=====================================================================

  //------------------LANGUAGE-SPECIFIC SETTINGS------------------------
  // JavaScript/TypeScript
  "jshint.options": {
    "esversion": 9 // Sets JSHint to use ECMAScript 9 (ES2018)
  },
  "jshint.lintHTML": true, // Enables JSHint in HTML files
  "jshint.enable": false, // Disables JSHint linting
  "javascript.updateImportsOnFileMove.enabled": "always", // Automatically updates imports when files are moved
  "typescript.updateImportsOnFileMove.enabled": "always", // Updates TypeScript imports when files move
  "typescript.suggestionActions.enabled": true, // Shows suggestion actions for TypeScript
  "typescript.preferences.importModuleSpecifier": "relative", // Uses relative paths for imports
  "typescript.preferences.quoteStyle": "single", // Uses single quotes in TypeScript

  // Formatter selection for different languages
  "[javascript]": {
    "editor.defaultFormatter": "vscode.typescript-language-features" // Uses built-in formatter for JavaScript
  },
  "[typescript]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode", // Uses Prettier for TypeScript
    "editor.formatOnSave": true // Formats TypeScript files on save
  },
  "[markdown]": {
    "editor.defaultFormatter": "yzhang.markdown-all-in-one", // Uses Markdown All in One formatter
    "editor.formatOnSave": true, // Formats Markdown files on save
    "editor.wordWrap": "on" // Enables word wrap for Markdown
  },
  "[python]": {
    "editor.defaultFormatter": "ms-python.python", // Uses Python extension's formatter
    "editor.formatOnType": true, // Formats Python code as you type
    "editor.formatOnSave": true, // Formats Python files on save
    "editor.codeActionsOnSave": {
      "source.organizeImports": "explicit" // Organizes Python imports on save when explicitly requested
    }
  },
  "[html]": {
    // "editor.defaultFormatter": "esbenp.prettier-vscode",
    "editor.defaultFormatter": "vscode.html-language-features", // Uses built-in formatter for HTML
    "editor.trimAutoWhitespace": false // Disables trimming whitespace in HTML
  },
  "[scss]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode" // Uses Prettier for SCSS
  },
  "[jsonc]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode" // Uses Prettier for JSON with comments
  },
  "[json]": {
    "editor.defaultFormatter": "vscode.json-language-features" // Uses built-in formatter for JSON
  },
  "[xml]": {
    "editor.autoClosingQuotes": "always", // Always closes quotes in XML
    "editor.defaultFormatter": "vscode.html-language-features" // Uses built-in formatter for XML
    // "editor.defaultFormatter": "DotJoshJohnson.xml"
  },
  "[css]": {
    "editor.defaultFormatter": "vscode.css-language-features" // Uses built-in formatter for CSS
  },
  "[vue]": {
    "editor.defaultFormatter": "Vue.volar" // Uses Volar for Vue files
  },

  // HTML specific formatting
  "html.format.indentInnerHtml": true, // Indents <head> and <body> sections
  "html.format.extraLiners": "true", // Adds extra line breaks for certain elements
  "html.format.wrapLineLength": 0, // Disables line wrapping in HTML
  "vetur.format.defaultFormatter.html": "prettier", // Uses Prettier for HTML in Vue files

  // JSON settings
  "json.maxItemsComputed": 7000, // Increases the limit of computed items for JSON intellisense

  // XML settings
  "xml.completion.autoCloseTags": true, // Automatically closes XML tags
  "xml.symbols.maxItemsComputed": 15000, // Increases the limit of computed symbols for XML
  "xml.server.vmargs": "-Xmx512M", // Allocates 512MB memory to XML server

  // Dart/Flutter settings
  "dart.lineLength": 100, // Sets Dart line length to 100 characters
  "[dart]": {
    "editor.formatOnSave": true, // Formats Dart code on save
    "editor.formatOnType": true, // Formats Dart code while typing
    // "editor.rulers": [80],
    "editor.selectionHighlight": true, // Highlights selections in Dart files
    "editor.suggest.snippetsPreventQuickSuggestions": false, // Allows quick suggestions with snippets
    "editor.suggestSelection": "first", // Selects first suggestion by default
    "editor.tabCompletion": "onlySnippets", // Tab only completes snippets
    "editor.wordBasedSuggestions": "allDocuments" // Uses all open documents for word suggestions
  },

  // C/C++ settings
  "C_Cpp.updateChannel": "Default", // Uses default update channel for C/C++ extension

  // Python settings
  "python.formatting.provider": "black", // Uses Black formatter for Python
  "python.linting.enabled": true, // Enables Python linting
  "python.linting.pylintEnabled": true, // Enables Pylint
  "python.analysis.typeCheckingMode": "basic", // Enables basic type checking

  // PHP settings
  "php.validate.enable": true, // Enables PHP validation
  "php.validate.run": "onType", // Validates PHP code as you type

  //------------------EXTERNAL TOOLS & PLUGINS-------------------------
  // ESLint settings

  "eslint.validate": ["javascript", "javascriptreact", "typescript", "typescriptreact"], // Validates these file types with ESLint
  "eslint.format.enable": true, // Enables ESLint as a formatter
  "eslint.lintTask.enable": true, // Enables ESLint task for linting whole workspace

  // Prettier settings
  "prettier.singleQuote": true, // Uses single quotes
  "prettier.trailingComma": "all", // Uses trailing commas per ES5 style
  "prettier.tabWidth": 2, // Sets tab width to 2 spaces
  "prettier.semi": true, // Adds semicolons
  "prettier.printWidth": 100, // Sets print width to 100 characters

  // Docker settings
  "docker.containers.sortBy": "Status", // Sorts containers by status
  "docker.images.sortBy": "CreatedTime", // Sorts images by creation time

  //------------------SALESFORCE & APEX SETTINGS-----------------------
  // These settings control Salesforce development tools

  // Salesforce DX settings
  "salesforcedx-vscode-core.show-cli-success-msg": false, // Hides CLI success messages
  "salesforcedx-vscode-core.push-or-deploy-on-save.overrideConflictsOnPush": false, // Doesn't override conflicts when pushing
  "salesforcedx-vscode-core.retrieve-test-code-coverage": true, // Retrieves test coverage information
  "salesforcedx-vscode-core.experimental.enableSourceTrackingForDeployAndRetrieve": false, // Disables experimental source tracking
  "salesforcedx-vscode-core.detectConflictsAtSync": true, // Detects conflicts during sync
  "salesforcedx-vscode-core.telemetry.enabled": false, // Disables Salesforce telemetry

  // Einstein for Salesforce settings
  "salesforce.einsteinForDevelopers.enableAutocompletions": false, // Disables Einstein autocompletions
  "salesforce.einsteinForDevelopers.enable": false, // Disables Einstein for Developers
  "salesforce.einsteinForDevelopers.enableAutocompletionsSleepModeMonitoring": false, // Disables sleep mode monitoring
  "salesforce.einsteinForDevelopers.enableInlineIndicatorForAutocomplete": true, // Shows inline indicators for autocompletions

  // Java configuration for Salesforce Apex
  "salesforcedx-vscode-apex.java.home": "C:\\Program Files\\Eclipse Adoptium\\jdk-21.0.7.6-hotspot", // Path to Java JDK for Apex
  // Alternative Java paths (commented out)
  // "salesforcedx-vscode-apex.java.home": "C:\\Program Files\\Java\\jdk-19",
  // "salesforcedx-vscode-apex.java.home": "C:\\Program Files\\Java\\jdk-17.0.2",
  // "salesforcedx-vscode-apex.java.home": "C:\\Program Files\\Common Files\\Oracle\\Java\\javapath",
  // "salesforcedx-vscode-apex.java.home": "/opt/homebrew/Cellar/openjdk@21/21.0.6/libexec/openjdk.jdk/Contents/Home",

  //------------------FILE ASSOCIATIONS & SEARCH------------------------
  // These settings control how VS Code interacts with files

  // File associations
  "files.associations": {
    "*.apxc": "java", // Treats .apxc files as Java
    "*.cmp": "html", // Treats .cmp files as HTML
    "*.gs": "javascript" // Treats .gs files as JavaScript
  },

  // File handling settings
  "files.exclude": {
    "**/.classpath": true, // Hides .classpath files
    "**/.project": true, // Hides .project files
    "**/.settings": true, // Hides .settings folders
    "**/.factorypath": true, // Hides .factorypath files
    "**/.DS_Store": true, // Excludes macOS DS_Store files
    "**/.git": true, // Excludes Git directories
    "**/node_modules": true, // Excludes node_modules
    "**/dist": true, // Excludes distribution directories
    "**/coverage": true // Excludes test coverage reports
  },
  "files.trimFinalNewlines": true, // Trims extra newlines at end of file
  "files.trimTrailingWhitespace": false, // Doesn't trim trailing whitespace

  // Search configuration
  "search.exclude": {
    "**/node_modules": true, // Excludes node_modules from search
    "**/bower_components": true, // Excludes bower_components from search
    "**/.sfdx": true // Excludes .sfdx folders from search
  },
  "search.smartCase": true, // Smart case-sensitive search (case-sensitive if query contains uppercase)
  "search.searchOnType": true, // Searches as you type
  "search.followSymlinks": false, // Doesn't follow symlinks when searching
  "search.sortOrder": "modified", // Sorts search results by last modified date

  // Additional file settings
  "files.insertFinalNewline": true, // Inserts final newline at end of file
  "files.autoSave": "afterDelay", // Auto-saves files after delay
  "files.autoSaveDelay": 1000, // Sets auto-save delay to 1000ms (1 second)
  "files.watcherExclude": {
    "**/.git/objects/**": true, // Excludes Git objects from file watcher
    "**/.git/subtree-cache/**": true, // Excludes Git subtree cache
    "**/node_modules/**": true, // Excludes node_modules from file watcher
    "**/tmp/**": true, // Excludes temporary directories
    "**/bower_components/**": true, // Excludes bower components
    "**/dist/**": true // Excludes distribution directories
  },
  "files.eol": "\n", // Uses LF (Unix-style) line endings

  // Performance
  "files.restoreUndoStack": false, // Doesn't restore undo stack when reopening files
  // "files.restoreUndoStack": true, // Restores undo history when reopening files
  "files.hotExit": "onExitAndWindowClose", // Remembers unsaved changes when VS Code exits

  //=====================================================================
  //? DEVELOPER TOOLS & INTEGRATIONS
  // This section controls third-party integrations and developer tools
  //=====================================================================

  //------------------PROJECT & SOURCE CONTROL--------------------------
  // Project Manager settings
  "projectManager.git.baseFolders": ["D:\\Orgs\\Aramco"], // Base folders for Project Manager

  // Git & GitLens settings
  "gitlens.advanced.messages": {
    "suppressGitMissingWarning": true // Suppresses warnings about missing Git
  },
  "git.ignoreMissingGitWarning": true, // Ignores warning about missing Git
  "git.autofetch": true, // Automatically fetches updates from remote repositories
  "git.openRepositoryInParentFolders": "never", // Doesn't open repositories in parent folders
  "gitlens.blame.ignoreWhitespace": true, // Ignores whitespace changes in Git blame
  "gitlens.views.commitDetails.files.layout": "list", // Shows commit files as a list
  "diffEditor.ignoreTrimWhitespace": false, // Doesn't ignore whitespace in diff view
  "diffEditor.maxComputationTime": 0, // No time limit for diff computations

  // Additional Git settings
  "git.confirmSync": true, // Do confirm before syncing Git repositories
  "git.enableSmartCommit": true, // Enables smart Git commits (skips staging area when no staged changes)
  "git.fetchOnPull": true, // Fetches before pulling changes
  "git.mergeEditor": true, // Uses the merge editor for Git merge conflicts
  "git.suggestSmartCommit": true, // Suggests using smart commit
  "git.branchProtection": ["main", "master", "develop"], // Protects these branches from direct commits
  "git.branchRandomName.enable": true, // Generates random names for new branches
  "git.showPushSuccessNotification": true, // Shows a notification when push succeeds
  "github.gitAuthentication": true, // Enables GitHub authentication
  "github.suggestReviewers": true, // Suggests reviewers for pull requests

  // Additional: Diffing and merging
  "diffEditor.renderSideBySide": true, // Shows diffs side by side
  "diffEditor.codeLens": true, // Shows code lens in diff view
  "diffEditor.diffAlgorithm": "advanced", // Uses advanced algorithm for better diffs
  "diffEditor.wordWrap": "off", // Disables word wrap in diff editor

  //------------------DEBUG & DEVELOPMENT------------------------------
  // Debugging settings

  "debug.toolBarLocation": "docked", // Docks the debug toolbar
  "debug.inlineValues": "auto", // Shows variable values inline while debugging
  "debug.console.wordWrap": true, // Enables word wrap in debug console
  "debug.onTaskErrors": "showErrors", // Shows errors when tasks fail
  "debug.showBreakpointsInOverviewRuler": true, // Shows breakpoints in editor overview ruler
  "debug.terminal.clearBeforeReusing": true, // Clears terminal before reusing it for debugging

  // Task settings
  "task.quickOpen.history": 30, // Remembers 30 recent tasks in quick open
  "task.saveBeforeRun": "always", // Saves files before running tasks

  //------------------DATABASE & EXTERNAL CONNECTIONS------------------
  // MS SQL Server connections
  "mssql.connectionGroups": [
    {
      "name": "ROOT", // Root connection group name
      "id": "230B5860-0D36-46DA-B848-80FF8E0097E5" // Group ID
    }
  ],
  "mssql.connections": [], // No saved SQL Server connections

  //------------------LIVE SERVER & BROWSER---------------------------
  // Live Server settings
  "liveServer.settings.donotShowInfoMsg": true, // Doesn't show info messages
  "liveServer.settings.ChromeDebuggingAttachment": false, // Disables Chrome debugging attachment
  "liveServer.settings.donotVerifyTags": true, // Doesn't verify HTML tags

  // Browser options for Live Server (comment/uncomment as needed)
  // "liveServer.settings.CustomBrowser": "chrome:PrivateMode",
  // "liveServer.settings.CustomBrowser": "chrome",
  // "liveServer.settings.CustomBrowser": "firefox:PrivateMode",
  // "liveServer.settings.CustomBrowser": "microsoft-edge",
  // "liveServer.settings.AdvanceCustomBrowserCmdLine": "C:\\Program Files (x86)\\Microsoft\\Edge\\Application\\msedge.exe --inPrivate",
  // "liveServer.settings.AdvanceCustomBrowserCmdLine": "C:\\Users\\Maaz\\AppData\\Local\\Thorium\\Application\\thorium.exe --incognito",
  "liveServer.settings.AdvanceCustomBrowserCmdLine": "C:\\Program Files\\BraveSoftware\\Brave-Browser\\Application\\brave.exe --incognito", // Uses Brave browser in incognito mode

  //------------------PLUGIN SETTINGS & SPELL CHECKER-----------------
  // Plugin settings
  "extensions.ignoreRecommendations": true, // Ignores extension recommendations
  "auto-rename-tag.activationOnLanguage": ["html", "xml", "php"], // Enables auto-rename for these languages
  "npm.keybindingsChangedWarningShown": true, // Doesn't show keybinding change warning
  "yaml.maxItemsComputed": 50000, // Increases computed item limit for YAML
  "materialTheme.accent": "Blue", // Sets Material Theme accent to blue
  "rainbow_csv.csv_lint_detect_trailing_spaces": true, // Detects trailing spaces in CSV
  // "prettier.prettierPath": "\\AppData\\Roaming\\npm\\node_modules\\prettier",

  // CSS Color information
  "colorInfo.languages": [
    {
      "selector": "css", // Enables color info in CSS
      "colors": "css"
    },
    {
      "selector": "sass", // Enables color info in Sass
      "colors": "css"
    },
    {
      "selector": "scss", // Enables color info in SCSS
      "colors": "css"
    },
    {
      "selector": "less", // Enables color info in Less
      "colors": "css"
    },
    {
      "selector": "html", // Enables color info in HTML
      "colors": "css"
    }
  ],

  // Custom dictionary for spell checking
  "cSpell.userWords": [
    "arrayify",
    "autocompletion",
    "autofetch",
    "backgroundColor",
    "bday",
    "camelcase",
    "Cascadia",
    "Caskaydia",
    "chevronleft",
    "chevronright",
    "CLSMEM",
    "combobox",
    "Consolas",
    "datasource",
    "Datatable",
    "datetime",
    "debouncer",
    "deserialize",
    "destructure",
    "devtools",
    "dismissable",
    "dotenv",
    "endof",
    "esbenp",
    "esversion",
    "fieldset",
    "Fira",
    "flexbox",
    "focusable",
    "gridline",
    "instanceof",
    "intellisense",
    "javapath",
    "keyframes",
    "Keymap",
    "kubernetes",
    "lightsaber",
    "limegreen",
    "linq",
    "Maaz",
    "middlewares",
    "mixin",
    "momentized",
    "Monokai",
    "multiline",
    "natively",
    "nestable",
    "nullish",
    "objectify",
    "onrowselection",
    "overscroll",
    "Picklist",
    "PICKVAL",
    "preload",
    "Reportees",
    "salesforcedx",
    "selectable",
    "SFDX",
    "slds",
    "SOQL",
    "staging",
    "steelblue",
    "stringify",
    "stylelint",
    "subgrid",
    "supabase",
    "superset",
    "symfony",
    "TELEMETRIES",
    "toastify",
    "transpile",
    "truthy",
    "typeof",
    "unarchive",
    "unfetch",
    "unmount",
    "unpublish",
    "unwatch",
    "upsert",
    "utilization",
    "viewport",
    "vsintellicode",
    "vuepress",
    "vueuse",
    "webdriver",
    "webhook",
    "websocket",
    "workspaces",
    "zindex"
  ],

  //=====================================================================
  //? PRIVACY, SYNC & MISCELLANEOUS
  // This section controls privacy settings and miscellaneous options
  //=====================================================================

  //------------------TELEMETRY & PRIVACY------------------------------
  // Disable telemetry and data collection
  "telemetry.telemetryLevel": "off", // Disables telemetry data collection
  "telemetry.feedback.enabled": false, // Disables feedback reporting
  "redhat.telemetry.enabled": false, // Disables Red Hat extension telemetry
  "cody.telemetry.level": "off", // Disables Cody extension telemetry
  /* Deprecated telemetry settings
  "telemetry.enableTelemetry": false,
  "telemetry.enableCrashReporter": false, */
  "githubPullRequests.telemetry.enabled": false,
  "typescript.surveys.enabled": false,
  "workbench.telemetryOptOutShown": true,
  "remotehub.telemetry.enabled": false,
  "github.copilot.enable": {
    "*": false
  },
  "github.copilot.advanced.telemetry": false,

  //------------------SETTINGS SYNC-----------------------------------
  // Settings Sync configuration
  "settingsSync.ignoredExtensions": [], // No extensions ignored during sync
  "settingsSync.ignoredSettings": [], // No settings ignored during sync

  //------------------WORKSPACE OPTIMIZATIONS------------------------
  "security.workspace.trust.untrustedFiles": "open", // Opens untrusted files without warning
  "chat.commandCenter.enabled": false, // Disables Copilot chat command center
  "codeAnalyzer.enableV5": true,

  //------------------ACCESSIBILITY & USABILITY------------------------
  // Settings for better accessibility and usability

  "accessibility.verbosity.diffEditor": true, // Increases verbosity for diff editor (for screen readers)
  "accessibility.verbosity.panelChat": true, // Doesn't play audio cue for no inlay hints
  "accessibility.signals.lineHasError": {
    "sound": "on"
  },
  "accessibility.signals.lineHasFoldedArea": {
    "sound": "on"
  },
  "accessibility.signals.lineHasBreakpoint": {
    "sound": "on"
  },
  "accessibility.signals.noInlayHints": {
    "sound": "off"
  } // Enables code analyzer v5
}
